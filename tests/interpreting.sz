container Holder(a)

task callable {
    std::println("from callable")
}

/**
 * Obviously doesn't actually do anything, just an example
 */
container Window(render) {

    task run {
        while (true) {
            render()
        }
    }

}

task render {
    std::println("rendering")
}

task main {
    // this is the main entrypoint for the program
    // this is called when the program is started

    mut a = "test"
    std::println("hello, world!" + a)

    const b = Holder(callable)
    b::a()

    std::println("test"::substring(1, 2))

    const window = Window(render)
    window::run()
}